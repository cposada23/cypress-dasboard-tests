name: Continuous integration

on:
  push:
    branches:
      - test-dashboard

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 2 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'yarn'
      - name: Install
        run: yarn
      - name: Code style
        run: yarn lint
      - name: setupEnvs
        id: envs
        working-directory: ./cypress
        run: |
          pwd
          ls -la
          echo "::set-output name=number::hiku"
          cypress='hola'
          echo "::set-output name=ORG_ID::${cypress}"
          echo "::set-output name=projectId::${{ secrets.PROJECT_ID }}"
          echo "project id: :${{ secrets.PROJECT_ID }}"
      - name: UI E2E Tests
        uses: cypress-io/github-action@v4
        id: cypress-tests
        continue-on-error: true
        env:
          CYPRESS_apiPort: 4222
          CYPRESS_container: ${{ matrix.containers }}
          CYPRESS_USER: 'HEHEHEHEHE'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_NUMBER: ${{steps.envs.outputs.number}}
          CYPRESS_ORG_ID: ${{steps.envs.outputs.ORG_ID}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_TEST: 9876
          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}
        with:
          config-file: cypress.config.ts
          install-command: yarn --immutable
          browser: chrome
          headless: true
          record: true
          parallel: true
          group: 'Actions example'
          config: baseUrl=https://www.google.com/,projectId=${{steps.envs.outputs.projectId}}
      - name: consolidate
        uses: actions/upload-artifact@v3
        if: always()
        # run: |
        #   ls -la ./cypress/results
        #   echo result for ${{ matrix.containers }} ${{ steps.cypress-tests.outcome }}
        #   echo $GITHUB_STEP_SUMMARY
        with:
          name: mochawesome
          path: cypress/results

  cypress-report:
    runs-on: ubuntu-latest
    name: Integration tests reporter
    needs: [cypress-run]
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: mochawesome
          path: artifact/
      - run: ls .
      - name: list files and store them
        working-directory: ./artifact
        id: finding-files
        run: |
          echo "::set-output name=FILELIST::$(find . -name '*.json' -print)"
      - name: Processing my found files from output
        run: |
          IFS="," read -a myarray <<< ${{ steps.finding-files.outputs.FILELIST }}
          for i in "${myarray[@]}"; do
            file_path=$(dirname "${i}")
            file_name=$(basename "${i}")
            cd file_path
            cat file_name
          done
          echo "DONE"
  #   steps:
  #     - name: Print Dashboard URL
  #       run: |
  #         echo Cypress finished with: ${{  needs.cypress-run.outcome }}
  #         echo Cypress finished with: steps.cypress-tests.outcome
  #         echo See results at ${{ needs.cypress-run.outputs.results }}
  #         echo See results at ${{ needs.cypress-run.outputs.results.dashboardUrl }}
  #         echo See results at ${{ steps.cypress-tests.outputs.dashboardUrl }}
